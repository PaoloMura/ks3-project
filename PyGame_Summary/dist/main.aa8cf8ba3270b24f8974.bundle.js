(self.webpackChunk=self.webpackChunk||[]).push([[179],{3447:(e,t,n)=>{var a={"./0-slide.md":3824};function l(e){var t=r(e);return n(t)}function r(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}l.keys=function(){return Object.keys(a)},l.resolve=r,e.exports=l,l.id=3447},3824:(e,t,n)=>{"use strict";n.r(t),n.d(t,{backgrounds:()=>i,default:()=>m,fragmentSteps:()=>o,fusumaProps:()=>s,slides:()=>p});var a=n(310),l=n(4535);n(751),n(7491);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r.apply(this,arguments)}const p=[e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h1",null,"Pygame Tutorial")),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h2",null,"Screen Setup 1"),(0,l.kt)("p",null,"This initialises Pygame:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pygame.init()\n")),(0,l.kt)("p",null,"This sets the ",(0,l.kt)("strong",{parentName:"p"},"window title"),". Replace 'Title Here' with your own title."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pygame.display.set_caption('Title Here')\n")),(0,l.kt)("p",null,"This sets the ",(0,l.kt)("strong",{parentName:"p"},"window icon"),". Replace 'icon_filename.png' with the filename of your own icon image."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"icon = pygame.image.load('icon_filename.png')\npygame.display.set_icon(icon)\n")),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(5561),alt:"image1"}))),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h2",null,"Screen Setup 2"),(0,l.kt)("p",null,"This sets the ",(0,l.kt)("strong",{parentName:"p"},"window size"),". Use different values to change the width and height of the window."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"SCREEN_WIDTH = 500\nSCREEN_HEIGHT = 500\nscreen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))\n")),(0,l.kt)("p",null,"This sets the ",(0,l.kt)("strong",{parentName:"p"},"background image")," for the window. Replace 'background_filename.png' with the filename of your background image."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"background = pygame.image.load('background_filename.png')\n")),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(313),alt:"image2"})),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(8712),alt:"image3"}))),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h2",null,"Game Objects (Sprites)"),(0,l.kt)("p",null,"A ",(0,l.kt)("strong",{parentName:"p"},"sprite")," is an object in the game. It could be anything from a character to an obstacle, a collectable item or a projectile. Any object you see in the game is a sprite."),(0,l.kt)("p",null,"To have sprites in our game, there are two steps:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Define the blueprint for that class of sprite."),(0,l.kt)("li",{parentName:"ol"},"Create an actual sprite from that blueprint.")),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(8254),alt:"image4"})),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(2400),alt:"image5"}))),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h1",null,"Sprite Classes"),(0,l.kt)("p",null,"A ",(0,l.kt)("strong",{parentName:"p"},"sprite class")," is the blueprint for our sprite. For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Player(Sprite):\n    def __init__(self):\n        super(Player, self).__init__()\n        self.image = pygame.image.load('player_filename.png').convert()\n        self.rect = self.image.get_rect()\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"Player")," is the name of the sprite.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"self.image")," contains the sprite's image.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"self.rect")," defines the rectangle of space that the sprite takes up on the screen.")))),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h1",null,"Sprite Groups"),(0,l.kt)("p",null,"A ",(0,l.kt)("strong",{parentName:"p"},"sprite group")," contains a set of sprites. We can use them to group together similar sprites (enemies, collectables, etc.). "),(0,l.kt)("p",null,"Here, we define a new group to contain all the sprites in the game:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"all_sprites = Group()\n")),(0,l.kt)("p",null,"Now we can create a new player sprite and add it to the group:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_player = Player()\nall_sprites.add(my_player)\n"))),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h2",null,"Game Loop"),(0,l.kt)("p",null,"The ",(0,l.kt)("strong",{parentName:"p"},"game loop")," is a ",(0,l.kt)("inlineCode",{parentName:"p"},"WHILE")," loop, which repeatedly runs the code inside it 30 times every second (30 fps)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"running = True\nwhile running:\n    # Add code here to handle EVENTS.\n\n    # Add code here to check for COLLISIONS.\n\n    # Add code here to RENDER the screen.\n"))),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h2",null,"Events"),(0,l.kt)("p",null,"We can use ",(0,l.kt)("strong",{parentName:"p"},"events")," to check for user input while the game is running. "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"We use a ",(0,l.kt)("inlineCode",{parentName:"p"},"FOR")," loop to go through all the events that have been triggered.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"We use ",(0,l.kt)("inlineCode",{parentName:"p"},"IF")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"ELIF")," statements to check the type of the event."))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"for event in pygame.event.get():\n    if event.type == QUIT:\n        running = False\n\n    elif event.type == KEYDOWN:\n        print('The user pressed a key!')\n    \n    elif event.type == MOUSEBUTTONDOWN:\n        print('The user pressed a mouse button!')\n")),(0,l.kt)("p",null,"Some other events you can check for include:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KEYUP")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MOUSEBUTTONUP")))),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h2",null,"KEYDOWN EVENTS"),(0,l.kt)("p",null,"Once we know which event has been triggered, we can use more ",(0,l.kt)("inlineCode",{parentName:"p"},"IF-ELIF")," statements to check which specific key or button was pressed:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"for event in pygame.event.get():\n    ...\n    \n    elif event.type == KEYDOWN:\n        if event.key == K_UP:\n            print('Up arrow key pressed.')\n\n        elif event.key == K_DOWN:\n            print('Down arrow key pressed.')\n        \n        elif event.key == K_LEFT:\n            print('Left arrow key pressed.')\n        \n        elif event.key == K_RIGHT:\n            print('Right arrow key pressed.')\n\n    ...\n")),(0,l.kt)("p",null,"You can find the full list of key codes here:\n",(0,l.kt)("a",{parentName:"p",href:"https://www.pygame.org/docs/ref/key.html"},"https://www.pygame.org/docs/ref/key.html"))),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h2",null,"Sprite Movement 1"),(0,l.kt)("p",null,"Remember, each sprite has a ",(0,l.kt)("inlineCode",{parentName:"p"},"rect"),", which tells Pygame about the sprite's rectangle location on-screen. To move the sprite, we need to change the ",(0,l.kt)("inlineCode",{parentName:"p"},"rect"),". There are a few ways to do this..."),(0,l.kt)("p",null,"The 'move in-place' function translates the sprite's position."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_player.rect.move_ip(5, 2)\n")),(0,l.kt)("p",null,"This tells pygame to move the sprite 5 pixels to the right and 2 pixels down.")),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h2",null,"Sprite Movement 2"),(0,l.kt)("p",null,"Another way to move sprites is to tell Pygame exactly which pixel on the screen we want to place them at."),(0,l.kt)("p",null,"This moves the sprite so that its topleft corner is at coordinate (50,100):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_player.rect.topleft = (50, 100)\n")),(0,l.kt)("p",null,"This moves the sprite so that its centre is at coordinate (40,20):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_player.rect.center = (40, 20)\n")),(0,l.kt)("p",null,"Here are some other options for setting position:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bottomleft, topright, bottomright, midtop, midleft, midbottom, midright"))),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h2",null,"Collisions"),(0,l.kt)("p",null,"Sprite ",(0,l.kt)("inlineCode",{parentName:"p"},"rect"),"s are also great if we want to check if two sprites have collided with each other. This can be used if you want to check if..."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Your player has touched a collectable item,")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"A projectile has hit your player,")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Your player has bumped into an obstacle,")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"etc."))),(0,l.kt)("p",null,"Here we are checking if our player has collided with another sprite called ",(0,l.kt)("inlineCode",{parentName:"p"},"player2"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"if my_player.rect.colliderect(player2.rect):\n    print('my_player collided with player2!')\n"))),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h2",null,"Rendering"),(0,l.kt)("p",null,"Finally, after we've made all the changes, we need to update the display. This part is called rendering and involves the following steps:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Fill the screen with the background image.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Go through each sprite in the ",(0,l.kt)("inlineCode",{parentName:"p"},"all_sprites")," group.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Draw the sprite's ",(0,l.kt)("strong",{parentName:"p"},"image")," onto the screen at the position given by its ",(0,l.kt)("strong",{parentName:"p"},"rect"),".")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Update the screen."))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"screen.blit(background, (0, 0))\nfor sprite in all_sprites:\n    screen.blit(sprite.image, sprite.rect)\nscreen.flip()\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"blit")," pastes an image onto the screen.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"flip")," updates the screen.")))),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h2",null,"Music"),(0,l.kt)("p",null,"To add music to the game, first load the music file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"music.load('my_song.mp3')\n")),(0,l.kt)("p",null,"Then start the music, use the following function. If you want it to keep looping without stopping, include ",(0,l.kt)("inlineCode",{parentName:"p"},"–1")," in the parentheses."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"music.play()\n")),(0,l.kt)("p",null,"To force the music to stop, use:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"music.stop()\n"))),e=>(0,l.kt)(a.Fragment,null,(0,l.kt)("h2",null,"Sound Effects"),(0,l.kt)("p",null,"To add a sound effect, first load it into the game:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_sound = Sound('sound_filename.mp3')\n")),(0,l.kt)("p",null,"Then use the play function each time you want it to start:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_sound.play()\n")),(0,l.kt)("p",null,"And the stop function to stop it from playing:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_sound.stop()\n")))],i=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],o=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],s=[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],u={};function m(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",r({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",null,"Pygame Tutorial"),(0,l.kt)("hr",null),(0,l.kt)("h2",null,"Screen Setup 1"),(0,l.kt)("p",null,"This initialises Pygame:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pygame.init()\n")),(0,l.kt)("p",null,"This sets the ",(0,l.kt)("strong",{parentName:"p"},"window title"),". Replace 'Title Here' with your own title."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pygame.display.set_caption('Title Here')\n")),(0,l.kt)("p",null,"This sets the ",(0,l.kt)("strong",{parentName:"p"},"window icon"),". Replace 'icon_filename.png' with the filename of your own icon image."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"icon = pygame.image.load('icon_filename.png')\npygame.display.set_icon(icon)\n")),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(5561),alt:"image1"})),(0,l.kt)("hr",null),(0,l.kt)("h2",null,"Screen Setup 2"),(0,l.kt)("p",null,"This sets the ",(0,l.kt)("strong",{parentName:"p"},"window size"),". Use different values to change the width and height of the window."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"SCREEN_WIDTH = 500\nSCREEN_HEIGHT = 500\nscreen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))\n")),(0,l.kt)("p",null,"This sets the ",(0,l.kt)("strong",{parentName:"p"},"background image")," for the window. Replace 'background_filename.png' with the filename of your background image."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"background = pygame.image.load('background_filename.png')\n")),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(313),alt:"image2"})),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(8712),alt:"image3"})),(0,l.kt)("hr",null),(0,l.kt)("h2",null,"Game Objects (Sprites)"),(0,l.kt)("p",null,"A ",(0,l.kt)("strong",{parentName:"p"},"sprite")," is an object in the game. It could be anything from a character to an obstacle, a collectable item or a projectile. Any object you see in the game is a sprite."),(0,l.kt)("p",null,"To have sprites in our game, there are two steps:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Define the blueprint for that class of sprite."),(0,l.kt)("li",{parentName:"ol"},"Create an actual sprite from that blueprint.")),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(8254),alt:"image4"})),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(2400),alt:"image5"})),(0,l.kt)("hr",null),(0,l.kt)("h1",null,"Sprite Classes"),(0,l.kt)("p",null,"A ",(0,l.kt)("strong",{parentName:"p"},"sprite class")," is the blueprint for our sprite. For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Player(Sprite):\n    def __init__(self):\n        super(Player, self).__init__()\n        self.image = pygame.image.load('player_filename.png').convert()\n        self.rect = self.image.get_rect()\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"Player")," is the name of the sprite.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"self.image")," contains the sprite's image.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"self.rect")," defines the rectangle of space that the sprite takes up on the screen."))),(0,l.kt)("hr",null),(0,l.kt)("h1",null,"Sprite Groups"),(0,l.kt)("p",null,"A ",(0,l.kt)("strong",{parentName:"p"},"sprite group")," contains a set of sprites. We can use them to group together similar sprites (enemies, collectables, etc.). "),(0,l.kt)("p",null,"Here, we define a new group to contain all the sprites in the game:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"all_sprites = Group()\n")),(0,l.kt)("p",null,"Now we can create a new player sprite and add it to the group:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_player = Player()\nall_sprites.add(my_player)\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",null,"Game Loop"),(0,l.kt)("p",null,"The ",(0,l.kt)("strong",{parentName:"p"},"game loop")," is a ",(0,l.kt)("inlineCode",{parentName:"p"},"WHILE")," loop, which repeatedly runs the code inside it 30 times every second (30 fps)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"running = True\nwhile running:\n    # Add code here to handle EVENTS.\n\n    # Add code here to check for COLLISIONS.\n\n    # Add code here to RENDER the screen.\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",null,"Events"),(0,l.kt)("p",null,"We can use ",(0,l.kt)("strong",{parentName:"p"},"events")," to check for user input while the game is running. "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"We use a ",(0,l.kt)("inlineCode",{parentName:"p"},"FOR")," loop to go through all the events that have been triggered.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"We use ",(0,l.kt)("inlineCode",{parentName:"p"},"IF")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"ELIF")," statements to check the type of the event."))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"for event in pygame.event.get():\n    if event.type == QUIT:\n        running = False\n\n    elif event.type == KEYDOWN:\n        print('The user pressed a key!')\n    \n    elif event.type == MOUSEBUTTONDOWN:\n        print('The user pressed a mouse button!')\n")),(0,l.kt)("p",null,"Some other events you can check for include:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"KEYUP")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"MOUSEBUTTONUP"))),(0,l.kt)("hr",null),(0,l.kt)("h2",null,"KEYDOWN EVENTS"),(0,l.kt)("p",null,"Once we know which event has been triggered, we can use more ",(0,l.kt)("inlineCode",{parentName:"p"},"IF-ELIF")," statements to check which specific key or button was pressed:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"for event in pygame.event.get():\n    ...\n    \n    elif event.type == KEYDOWN:\n        if event.key == K_UP:\n            print('Up arrow key pressed.')\n\n        elif event.key == K_DOWN:\n            print('Down arrow key pressed.')\n        \n        elif event.key == K_LEFT:\n            print('Left arrow key pressed.')\n        \n        elif event.key == K_RIGHT:\n            print('Right arrow key pressed.')\n\n    ...\n")),(0,l.kt)("p",null,"You can find the full list of key codes here:\n",(0,l.kt)("a",{parentName:"p",href:"https://www.pygame.org/docs/ref/key.html"},"https://www.pygame.org/docs/ref/key.html")),(0,l.kt)("hr",null),(0,l.kt)("h2",null,"Sprite Movement 1"),(0,l.kt)("p",null,"Remember, each sprite has a ",(0,l.kt)("inlineCode",{parentName:"p"},"rect"),", which tells Pygame about the sprite's rectangle location on-screen. To move the sprite, we need to change the ",(0,l.kt)("inlineCode",{parentName:"p"},"rect"),". There are a few ways to do this..."),(0,l.kt)("p",null,"The 'move in-place' function translates the sprite's position."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_player.rect.move_ip(5, 2)\n")),(0,l.kt)("p",null,"This tells pygame to move the sprite 5 pixels to the right and 2 pixels down."),(0,l.kt)("hr",null),(0,l.kt)("h2",null,"Sprite Movement 2"),(0,l.kt)("p",null,"Another way to move sprites is to tell Pygame exactly which pixel on the screen we want to place them at."),(0,l.kt)("p",null,"This moves the sprite so that its topleft corner is at coordinate (50,100):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_player.rect.topleft = (50, 100)\n")),(0,l.kt)("p",null,"This moves the sprite so that its centre is at coordinate (40,20):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_player.rect.center = (40, 20)\n")),(0,l.kt)("p",null,"Here are some other options for setting position:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bottomleft, topright, bottomright, midtop, midleft, midbottom, midright")),(0,l.kt)("hr",null),(0,l.kt)("h2",null,"Collisions"),(0,l.kt)("p",null,"Sprite ",(0,l.kt)("inlineCode",{parentName:"p"},"rect"),"s are also great if we want to check if two sprites have collided with each other. This can be used if you want to check if..."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Your player has touched a collectable item,")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"A projectile has hit your player,")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Your player has bumped into an obstacle,")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"etc."))),(0,l.kt)("p",null,"Here we are checking if our player has collided with another sprite called ",(0,l.kt)("inlineCode",{parentName:"p"},"player2"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"if my_player.rect.colliderect(player2.rect):\n    print('my_player collided with player2!')\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",null,"Rendering"),(0,l.kt)("p",null,"Finally, after we've made all the changes, we need to update the display. This part is called rendering and involves the following steps:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Fill the screen with the background image.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Go through each sprite in the ",(0,l.kt)("inlineCode",{parentName:"p"},"all_sprites")," group.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Draw the sprite's ",(0,l.kt)("strong",{parentName:"p"},"image")," onto the screen at the position given by its ",(0,l.kt)("strong",{parentName:"p"},"rect"),".")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Update the screen."))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"screen.blit(background, (0, 0))\nfor sprite in all_sprites:\n    screen.blit(sprite.image, sprite.rect)\nscreen.flip()\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"blit")," pastes an image onto the screen.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"flip")," updates the screen."))),(0,l.kt)("hr",null),(0,l.kt)("h2",null,"Music"),(0,l.kt)("p",null,"To add music to the game, first load the music file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"music.load('my_song.mp3')\n")),(0,l.kt)("p",null,"Then start the music, use the following function. If you want it to keep looping without stopping, include ",(0,l.kt)("inlineCode",{parentName:"p"},"–1")," in the parentheses."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"music.play()\n")),(0,l.kt)("p",null,"To force the music to stop, use:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"music.stop()\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",null,"Sound Effects"),(0,l.kt)("p",null,"To add a sound effect, first load it into the game:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_sound = Sound('sound_filename.mp3')\n")),(0,l.kt)("p",null,"Then use the play function each time you want it to start:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_sound.play()\n")),(0,l.kt)("p",null,"And the stop function to stop it from playing:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"my_sound.stop()\n")))}m.isMDXComponent=!0},5421:(e,t,n)=>{"use strict";n.r(t)},5561:(e,t,n)=>{"use strict";e.exports=n.p+"049896a08f7329f8600b.webp"},313:(e,t,n)=>{"use strict";e.exports=n.p+"2e43aa40350e4415f350.webp"},8712:(e,t,n)=>{"use strict";e.exports=n.p+"94b24597bd71aac03dc2.webp"},8254:(e,t,n)=>{"use strict";e.exports=n.p+"b5f796a50a333d0131c2.webp"},2400:(e,t,n)=>{"use strict";e.exports=n.p+"cd66b7aec53d6a40ef03.webp"}},e=>{e.O(0,[179],(()=>{[118,125,902].map(e.E)}),5);var t=t=>e(e.s=t);e.O(0,[736],(()=>(t(3532),t(8456),t(9231))));e.O()}]);